" YanConfig Copyright (C) 2015 yanqd0@gmail.com
"
" This program comes with ABSOLUTELY NO WARRANTY under the terms of GPLv3.
" This is free software, and you are welcome to redistribute it under certain
" conditions; see the LISENSE in the root of this project.

set nocompatible               " be iMproved

source ~/.vim/bundles.vimrc

" My configurations
let mapleader=","

" colors
syntax on           "语法高亮
set background=dark "设置背景色
colorscheme molokai

" vim-indent-guides
if !has('gui')
    let g:indent_guides_auto_colors = 0
    highlight IndentGuidesOdd  ctermbg=grey
    highlight IndentGuidesEven ctermbg=darkgrey
endif

" vim-easymotion
highlight link EasyMotionTarget ErrorMsg
highlight link EasyMotionShade Comment
highlight link EasyMotionTarget2First Constant
highlight link EasyMotionTarget2Second Conditional

set number          "显示行号
set hlsearch        "高亮搜索
set incsearch       "在键入目标字符时就开始搜索
set showmatch       "在输入时光标会短暂地跳到与之相匹配的括号处，不影响输入
set ignorecase smartcase        "只输入小写时忽略大小写，否则不忽略
set showcmd         "显示命令
set history=1000    "记录命令历史的行数
set clipboard=unnamed   "设置系统剪切板为默认剪切板
"set autochdir       "自动设置当前文件目录为当前工作目录

"set mouse=a        "所有模式下使用鼠标功能
set mousehide       "输入文字时，隐藏mouse
set backspace=indent,eol,start    "indent删除缩进，eol插入模式退格合并两行，start删除此次插入之前的输入
"set shiftwidth=4   "错行空格
set autoindent      "自动缩进
set cindent shiftwidth=4    "缩进的字符个数
set expandtab       "用space替代tab的输入
set tabstop=4       "一个tab是4个字符
set softtabstop=4   "用空格代替tab
"set list           "显示tab键
"set listchars=tab:>-,trail:-   "tab显示方式
set wildmenu
set wildmode=list:longest,full

set tabpagemax=50   "最多显示的TAB页数
set foldenable      "允许折叠
set foldmethod=syntax
set foldopen=all    "光标遇到折叠，折叠就打开
set foldclose=all    "光标移开时自动关闭折叠
set foldnestmax=2
set foldminlines=3
set ruler           "打开光标行列位置显示功能
set cursorline      "鼠标行高亮
"set cursorcolumn   "鼠标列高亮，与函数列表有冲突
"set cmdheight=2    "设置命令行的高度
"set spell          "设置拼写查错
set laststatus=2    "显示状态栏（默认值为1，无法显示状态栏）
set nobackup        "缺省不产生备份文件
set noswapfile      "禁止生成临时文件

set textwidth=100
set formatoptions+=tcroqlwabB
filetype plugin indent on     "打开文件类型检测，允许加载文件类型插件，不同文件类型不同缩进方式
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,latin1    "设置文件默认解码方式
set fileformats=unix,dos    "自动识别UNIX和MS-DOS的格式

if has("autocmd")   "如果上次退出时光标不在第一行
   au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif               "则将光标定位在退出时所在行

"一些map
nnoremap <leader>lp :let @+=@"<CR>
nnoremap <leader>cd :lcd %:p:h<CR>      "切换当前文件目录为当前目录
nnoremap <Leader>rc :so ~/.vim/vimrc<CR>
nnoremap <Leader>oc :tabnew ~/.vim/vimrc<CR>

" Windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove

"cscope的配置
set cscopequickfix=s-,c-,d-,i-,t-,e-,f-
nnoremap <leader>sa :cs add ~/.vim/tags/cscope.out<CR>
"查找C语言符号 v
nnoremap <leader>ss :cs find s <C-R>=expand("<cword>")<cr><cr>
"find this definition   查找定义位置 v
nnoremap <leader>sg :cs find g <C-R>=expand("<cword>")<cr><cr>
"调用本函数的函数 v
nnoremap <leader>sc :cs find c <C-R>=expand("<cword>")<cr><cr>
"查找指定的字符串 v
nnoremap <leader>st :cs find t <C-R>=expand("<cword>")<cr><cr>
"egrep，查找正则表达式 v
nnoremap <leader>se :cs find e <C-R>=expand("<cword>")<cr><cr>
"查找文件 v
nnoremap <leader>sf :cs find f <C-R>=expand("<cfile>")<cr><cr>
"查找调用此文件的文件 v
nnoremap <leader>si :cs find i <C-R>=expand("<cfile>")<cr><cr>
"查找本函数调用的函数 v
nnoremap <leader>sd :cs find d <C-R>=expand("<cword>")<cr><cr>

"conque_term, <F3>为进入bash快捷键
"let g:ConqueTerm_ExecFileKey = '<F5>'
"nnoremap <silent> <F3> :ConqueTerm bash<CR>

