" YanConfig Copyright (C) 2015 yanqd0@gmail.com
"
" This program comes with ABSOLUTELY NO WARRANTY under the terms of GPLv3.
" This is free software, and you are welcome to redistribute it under certain
" conditions; see the LISENSE in the root of this project.

set nocompatible               " be iMproved
let mapleader=","

if filereadable(expand("~/.vim/plugins.vimrc"))
    source ~/.vim/plugins.vimrc
endif

" colors begin {
set t_Co=256
syntax on           "语法高亮
set background=dark "设置背景色
colorscheme molokai

" easymotion
hi link EasyMotionTarget ErrorMsg
hi link EasyMotionShade Comment
hi link EasyMotionTarget2First Constant
hi link EasyMotionTarget2Second Conditional

" vim-indent-guides
let g:indent_guides_auto_colors = 0
highlight IndentGuidesOdd  ctermbg=grey
highlight IndentGuidesEven ctermbg=darkgrey

" some personal high light schemes
hi YanError ctermbg=green ctermfg=black guibg=red guifg=black
match YanError /\t\|\r\|\s\s*\n/
" } colors end

" My configurations
set number          "显示行号
set hlsearch        "高亮搜索
set incsearch       "在键入目标字符时就开始搜索
set showmatch       "在输入时光标会短暂地跳到与之相匹配的括号处，不影响输入
set ignorecase smartcase        "只输入小写时忽略大小写，否则不忽略
syntax on           "语法高亮
set ai!             "设置自动缩进
set showcmd         "显示命令
set history=100     "记录命令历史的行数
set clipboard=unnamed   "设置系统剪切板为默认剪切板
"set autochdir       "自动设置当前文件目录为当前工作目录

"set mouse=a        "所有模式下使用鼠标功能
set mousehide       "输入文字时，隐藏mouse
set backspace=indent,eol,start    "indent删除缩进，eol插入模式退格合并两行，start删除此次插入之前的输入
"set shiftwidth=4   "错行空格
set autoindent      "自动缩进
set cindent shiftwidth=4    "缩进的字符个数
set expandtab       "用space替代tab的输入
set nocompatible    "tab可以变成空格
set tabstop=4       "一个tab是4个字符
set softtabstop=4   "用空格代替tab
"set list           "显示tab键
"set listchars=tab:>-,trail:-   "tab显示方式
set wildmenu
set wildmode=list:longest,full

set tabpagemax=50   "最多显示的TAB页数
set foldenable      "允许折叠
set foldmethod=syntax   "手动折叠
set foldopen=all    "光标遇到折叠，折叠就打开
set foldclose=all    "光标移开时自动关闭折叠
set foldnestmax=2
set foldminlines=3
set ruler           "打开光标行列位置显示功能
set cursorline      "鼠标行高亮
"set cursorcolumn     "鼠标列高亮，与函数列表有冲突
"set cmdheight=2    "设置命令行的高度
set spell           "设置拼写查错
set laststatus=2    "显示状态栏（默认值为1，无法显示状态栏）
set nocp            "去掉有关vi一致性模式，避免以前版本的一些bug和局限
set nobackup        "缺省不产生备份文件
set noswapfile      "禁止生成临时文件

set textwidth=100
set cc=100
set formatoptions+=tcroqwbmBj
filetype plugin indent on     "打开文件类型检测，允许加载文件类型插件，不同文件类型不同缩进方式
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,latin1    "设置文件默认解码方式
"set fileformats=unix,dos    "自动识别UNIX和MS-DOS的格式
set fileformats=unix

if has("autocmd")   "如果上次退出时光标不在第一行
    au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif               "则将光标定位在退出时所在行

" autocmd
if has("autocmd")
    " Java
    autocmd filetype java set textwidth=100
    autocmd filetype java set colorcolumn=100
    autocmd filetype java map <F5> :w!<CR>:execute "!javac %; java %:t:r"<CR>
    autocmd filetype java map! <F5> <ESC>:w!<CR>:execute "!javac %; java %:t:r"<CR>

    " Python
    autocmd filetype python set textwidth=80
    autocmd filetype python set colorcolumn=80
    autocmd filetype python map <F5> :w!<CR>:execute "!python -u %"<CR>
    autocmd filetype python map! <F5> <ESC>:w!<CR>:execute "!python -u %"<CR>
endif

" Maps
nnoremap <leader>lp :let @+=@"<CR>
nnoremap <leader>cd :lcd %:p:h<CR>      "切换当前文件目录为当前目录
nnoremap <Leader>rc :so ~/.vim/vimrc<CR>
nnoremap <Leader>oc :edit ~/.vim/vimrc<CR>

" Windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove

"cscope的配置
set cscopequickfix=s-,c-,d-,i-,t-,e-,f-
nmap <leader>sa :cs add ~/.vim/tags/cscope.out<CR>
"查找C语言符号 v
nmap <leader>ss :cs find s <C-R>=expand("<cword>")<cr><cr>
"find this definition   查找定义位置 v
nmap <leader>sg :cs find g <C-R>=expand("<cword>")<cr><cr>
"调用本函数的函数 v
nmap <leader>sc :cs find c <C-R>=expand("<cword>")<cr><cr>
"查找指定的字符串 v
nmap <leader>st :cs find t <C-R>=expand("<cword>")<cr><cr>
"egrep，查找正则表达式 v
nmap <leader>se :cs find e <C-R>=expand("<cword>")<cr><cr>
"查找文件 v
nmap <leader>sf :cs find f <C-R>=expand("<cfile>")<cr><cr>
"查找调用此文件的文件 v
nmap <leader>si :cs find i <C-R>=expand("<cfile>")<cr><cr>
"查找本函数调用的函数 v
nmap <leader>sd :cs find d <C-R>=expand("<cword>")<cr><cr>
